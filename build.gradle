plugins {
	id 'fabric-loom' version "${loom_version}"
	id 'maven-publish'
}

version = project.mod_version + "+" + minecraft_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}
repositories {
	maven {
		name = 'ParchmentMC'
		url = 'https://maven.parchmentmc.org'
	}
	exclusiveContent {
		forRepository {
			maven {
				name = "Modrinth"
				url = "https://api.modrinth.com/maven"
			}
		}
		filter {
			includeGroup "maven.modrinth"
		}
	}
	maven {
		name = "TerraformersMC"
		url = "https://maven.terraformersmc.com/"
	}
	maven {
		name = "cassian's maven"
		url = "https://maven.cassian.cc/"
	}
	exclusiveContent {
		forRepository {
			maven {
				name = "Greenhouse Maven"
				url = "https://repo.greenhouse.house/releases/"
			}
		}
		filter {
			includeGroup "vectorwing"
		}
	}
	maven { url 'https://maven.wispforest.io' }
	exclusiveContent {
		forRepository {
			maven {
				url = "https://jitpack.io"
			}
		}
		filter {
			includeGroup "com.github.Chocohead"
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://repo.sleeping.town/"
			}
		}
		filter {
			includeGroup "folk.sisby"
		}
	}
	maven {
		name = "Fuzs Mod Resources"
		url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/"
	}
	maven {
		url = "https://maven.architectury.dev/"
	}
	maven {
		url = "https://jm.gserv.me/repository/maven-public/"
	}
	maven {
		url = "https://maven.nucleoid.xyz"
	}
	flatDir {
		dirs("libs")
	}
}

//fabricApi {
//	configureDataGeneration {
//		client = true
//	}
//}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.layered() {
		officialMojangMappings()
		parchment("org.parchmentmc.data:parchment-1.21.1:2024.11.17@zip")
	}
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	// Mixin Constraints - embedded
	include(implementation("com.moulberry:mixinconstraints:1.0.9"))
	// Mod Menu - https://modrinth.com/mod/modmenu/versions
	modImplementation("com.terraformersmc:modmenu:${project.modmenu_version}")
	modImplementation("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_version}")
	implementation(include("folk.sisby:kaleido-config:${kaleido_version}"))
	modImplementation "maven.modrinth:mcqoy:$mcqoy_version"
	// Item Descriptions
	modImplementation "cc.cassian.item-descriptions:item-descriptions-fabric:${item_descriptions_version}+${minecraft_version}"

}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": inputs.properties.version
	}
}

//loom {
//	accessWidenerPath = file("src/main/resources/tt_cauldrons.accesswidener")
//}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	inputs.property "archivesName", project.base.archivesName

	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}